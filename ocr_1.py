# -*- coding: utf-8 -*-
"""OCR #1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CGU1vqAFEu5HKf-ZTo0snmUY0h7xRVHh

**Preparazione ambiente di lavoro**
"""

# installo sul mio notebook la libreria easyocr
!pip install easyocr

# mi poso importare la libreria 
import easyocr
#uso la funzione reader per prendere un'immagine
reader = easyocr.Reader(['en'])

# importo un file di prova
!wget https://excelguider.com/wp-content/uploads/2019/07/Documents-Of-Non-Profit-Balance-Sheet-Template-Excel-with-Non-Profit-Balance-Sheet-Template-Excel-Sheet.jpg

"""**Rappresentazione immagine**"""

# mi importo le librerie necessarie per decodificare e rappresentare la mia immagine prova
import PIL

# unso la funzione immageview di default nel pacchetto PIL
from PIL import ImageDraw
img = PIL.Image.open('Documents-Of-Non-Profit-Balance-Sheet-Template-Excel-with-Non-Profit-Balance-Sheet-Template-Excel-Sheet.jpg')
img

# irconicio gli elementi dell'immagine prova tramite ocr
bounds = reader.readtext('Documents-Of-Non-Profit-Balance-Sheet-Template-Excel-with-Non-Profit-Balance-Sheet-Template-Excel-Sheet.jpg')
bounds

"""**Dispaly delle cornici**"""

# mi definisco una funzione che ponga gli elementi identificati in delle scatole
def draw_boxes(image, bounds, color='yellow', width=2):
    draw = ImageDraw.Draw(image)
    for bound in bounds:
        p0, p1, p2, p3 = bound[0]
        draw.line([*p0, *p1, *p2, *p3, *p0], fill=color, width=width)
    return image

# stampo scatole ed elementi
draw_boxes(img, bounds)

# miglioro i margini
bounds = reader.readtext('Documents-Of-Non-Profit-Balance-Sheet-Template-Excel-with-Non-Profit-Balance-Sheet-Template-Excel-Sheet.jpg',
                         contrast_ths=0.05,
                         adjust_contrast=0.7,
                         add_margin=0.45,
                         width_ths=0.7,
                         decoder='beamsearch')
bounds

draw_boxes(img, bounds)